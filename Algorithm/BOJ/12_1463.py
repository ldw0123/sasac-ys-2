# 1로 만들기 (1463) Silver III
# Dynamic Programming

# Bottom Up 풀이

n = int(input())
# 배열 d에 이전에 계산된 값을 저장해둔다
# n + 1이라고 한 이유는, 계산하기 편하게 d[1]을 1번째 인 것 처럼 만들어준다
# d[1] = 0 으로 초기화 : 1을 1로 만드는 데 연산이 필요하지 않으므로 (연산 횟수: 0)
d = [0] * (n + 1)

for i in range(2, n + 1):  # i는 2부터 n까지 반복하면서 모든 경우를 고려해야 한다
    # 1) 1을 뺀다
    d[i] = d[i - 1] + 1
    # 2) X가 3으로 나누어 떨어지면, 3으로 나눈다
    if i % 3 == 0:
        # 1을 더하는 것은 d는 결과가 아닌 계산한 횟수를 저장하는 것 이기 때문이다. d[i]에는 더하지 않는 이유는 이미 1을 뺄 때 1을 더해준 이력이 있기 때문이다
        d[i] = min(d[i], d[i // 3] + 1)
    # 3) X가 2로 나누어 떨어지면, 2로 나눈다
    if i % 2 == 0:
        d[i] = min(d[i], d[i // 2] + 1)
print(d[n])
